# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.ascio.com/property_contacts_together.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.ascio.com.rb'

describe Whois::Record::Parser::WhoisAscioCom, "property_contacts_together.expected" do

  subject do
    file = fixture("responses", "whois.ascio.com/property_contacts_together.txt")
    part = Whois::Record::Part.new(:body => File.read(file))
    described_class.new(part)
  end

  describe "#disclaimer" do
    it do
      subject.disclaimer.should == "The data in Ascio Technologies' WHOIS database is provided by Ascio Technologies for information purposes only. By submitting a WHOIS query, you agree that you will use this data only for lawful purpose. In addition, you agree not to: (a) use the data to allow, enable, or otherwise support any marketing activities, regardless of the medium used. Such media include but are not limited to e-mail, telephone, facsimile, postal mail, SMS, and wireless alerts; or (b) use the data to enable high volume, automated, electronic processes that sendqueries or data to the systems of any Registry Operator or ICANN-Accredited registrar, except as reasonably necessary to register domain names or modify existing registrations. (c) sell or redistribute the data except insofar as it has been incorporated into a value-added product or service that does not permit the extraction of a substantial portion of the bulk data from the value-added product or service for use by other parties. Ascio Technologies reserves the right to modify these terms at any time. Ascio Technologies cannot guarantee the accuracy of the data provided. By accessing and using Ascio Technologies WHOIS service, you agree to these terms."
    end
  end
  describe "#domain" do
    it do
      subject.domain.should == "siemens.com"
    end
  end
  describe "#domain_id" do
    it do
      lambda { subject.domain_id }.should raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#available?" do
    it do
      subject.available?.should == false
    end
  end
  describe "#registered?" do
    it do
      subject.registered?.should == true
    end
  end
  describe "#created_on" do
    it do
      subject.created_on.should be_a(Time)
      subject.created_on.should == Time.parse("2007-02-05 09:46:11")
    end
  end
  describe "#updated_on" do
    it do
      subject.updated_on.should be_a(Time)
      subject.updated_on.should == Time.parse("2013-06-20 13:00:49")
    end
  end
  describe "#expires_on" do
    it do
      subject.expires_on.should be_a(Time)
      subject.expires_on.should == Time.parse("2013-09-28 00:00:00")
    end
  end
  describe "#registrar" do
    it do
      subject.registrar.should be_a(Whois::Record::Registrar)
      subject.registrar.id.should           == "ASCIOTEC1364"
      subject.registrar.name.should         == "Ascio Technologies"
      subject.registrar.organization.should == "Ascio Technologies, Inc"
      subject.registrar.url.should          == "http://www.ascio.com/"
    end
  end
  describe "#registrant_contacts" do
    it do
      subject.registrant_contacts.should be_a(Array)
      subject.registrant_contacts.should have(1).items
      subject.registrant_contacts[0].should be_a(Whois::Record::Contact)
      subject.registrant_contacts[0].type.should          == Whois::Record::Contact::TYPE_REGISTRANT
      subject.registrant_contacts[0].id.should            == "SIEMENSA240"
      subject.registrant_contacts[0].name.should          == nil
      subject.registrant_contacts[0].organization.should  == "Siemens AG"
      subject.registrant_contacts[0].address.should       == "Wittelsbacherplatz 2"
      subject.registrant_contacts[0].city.should          == "Muenchen"
      subject.registrant_contacts[0].zip.should           == "80333"
      subject.registrant_contacts[0].state.should         == "Bayern"
      subject.registrant_contacts[0].country.should       == nil
      subject.registrant_contacts[0].country_code.should  == "DE"
      subject.registrant_contacts[0].phone.should         == nil
      subject.registrant_contacts[0].fax.should           == nil
      subject.registrant_contacts[0].email.should         == nil
    end
  end
  describe "#admin_contacts" do
    it do
      subject.admin_contacts.should be_a(Array)
      subject.admin_contacts.should have(1).items
      subject.admin_contacts[0].should be_a(Whois::Record::Contact)
      subject.admin_contacts[0].type.should          == Whois::Record::Contact::TYPE_ADMINISTRATIVE
      subject.admin_contacts[0].id.should            == "GR43003"
      subject.admin_contacts[0].name.should          == "Gerald Rinske"
      subject.admin_contacts[0].organization.should  == "Siemens AG"
      subject.admin_contacts[0].address.should       == "Otto-Hahn-Ring 6"
      subject.admin_contacts[0].city.should          == "Munich"
      subject.admin_contacts[0].zip.should           == "81739"
      subject.admin_contacts[0].state.should         == "Bavaria"
      subject.admin_contacts[0].country.should       == nil
      subject.admin_contacts[0].country_code.should  == "DE"
      subject.admin_contacts[0].phone.should         == "+49.8963647713"
      subject.admin_contacts[0].fax.should           == "+49.8963625949"
      subject.admin_contacts[0].email.should         == "hostmaster@siemens.com"
    end
  end
  describe "#technical_contacts" do
    it do
      subject.technical_contacts.should be_a(Array)
      subject.technical_contacts.should have(1).items
      subject.technical_contacts[0].should be_a(Whois::Record::Contact)
      subject.technical_contacts[0].type.should          == Whois::Record::Contact::TYPE_TECHNICAL
      subject.technical_contacts[0].id.should            == "GR43003"
      subject.technical_contacts[0].name.should          == "Gerald Rinske"
      subject.technical_contacts[0].organization.should  == "Siemens AG"
      subject.technical_contacts[0].address.should       == "Otto-Hahn-Ring 6"
      subject.technical_contacts[0].city.should          == "Munich"
      subject.technical_contacts[0].zip.should           == "81739"
      subject.technical_contacts[0].state.should         == "Bavaria"
      subject.technical_contacts[0].country.should       == nil
      subject.technical_contacts[0].country_code.should  == "DE"
      subject.technical_contacts[0].phone.should         == "+49.8963647713"
      subject.technical_contacts[0].fax.should           == "+49.8963625949"
      subject.technical_contacts[0].email.should         == "hostmaster@siemens.com"
    end
  end
  describe "#nameservers" do
    it do
      subject.nameservers.should be_a(Array)
      subject.nameservers.should have(4).items
      subject.nameservers[0].should be_a(Whois::Record::Nameserver)
      subject.nameservers[0].name.should == "ns-ext.siemens.de"
      subject.nameservers[1].should be_a(Whois::Record::Nameserver)
      subject.nameservers[1].name.should == "ns-ext.siemens.com"
      subject.nameservers[2].should be_a(Whois::Record::Nameserver)
      subject.nameservers[2].name.should == "ns-ext.siemens.net"
      subject.nameservers[3].should be_a(Whois::Record::Nameserver)
      subject.nameservers[3].name.should == "ns-ext.siemens.com.sg"
    end
  end
end
