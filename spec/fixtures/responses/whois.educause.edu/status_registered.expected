#disclaimer
  should: %s == "\nThis Registry database contains ONLY .EDU domains. \nThe data in the EDUCAUSE Whois database is provided \nby EDUCAUSE for information purposes in order to \nassist in the process of obtaining information about \nor related to .edu domain registration records. \n\nThe EDUCAUSE Whois database is authoritative for the \n.EDU domain.         \n\nA Web interface for the .EDU EDUCAUSE Whois Server is \navailable at: http://whois.educause.net \n\nBy submitting a Whois query, you agree that this information \nwill not be used to allow, enable, or otherwise support \nthe transmission of unsolicited commercial advertising or \nsolicitations via e-mail.  The use of electronic processes to \nharvest information from this server is generally prohibited \nexcept as reasonably necessary to register or modify .edu \ndomain names.\n\nYou may use \"%\" as a wildcard in your search. For further \ninformation regarding the use of this WHOIS server, please \ntype: help \n"


#domain
  should: %s == "educause.edu"

#domain_id
  should: %s raise_error(Whois::PropertyNotSupported)


#referral_url
  should: %s raise_error(Whois::PropertyNotSupported)

#referral_whois
  should: %s raise_error(Whois::PropertyNotSupported)


#status
  should: %s == :registered

#available?
  should: %s == false

#registered?
  should: %s == true


#created_on
  should: %s CLASS(time)
  should: %s == Time.parse("1998-03-11")

#updated_on
  should: %s CLASS(time)
  should: %s == Time.parse("2009-10-02")

#expires_on
  should: %s CLASS(time)
  should: %s == Time.parse("2010-07-31")


#registrar
  should: %s raise_error(Whois::PropertyNotSupported)

#registrant_contacts
  should: %s CLASS(array)
  should: %s SIZE(1)
  should: %s[0] CLASS(contact)
  should: %s[0].type          == Whois::Record::Contact::TYPE_REGISTRANT
  should: %s[0].id            == nil
  should: %s[0].name          == nil
  should: %s[0].organization  == "EDUCAUSE"
  should: %s[0].address       == "4772 Walnut Street\nSuite 206"
  should: %s[0].city          == "Boulder"
  should: %s[0].zip           == "80301"
  should: %s[0].state         == "CO"
  should: %s[0].country       == "UNITED STATES"
  should: %s[0].country_code  == nil
  should: %s[0].phone         == nil
  should: %s[0].fax           == nil
  should: %s[0].email         == nil

#admin_contacts
  should: %s CLASS(array)
  should: %s SIZE(1)
  should: %s[0] CLASS(contact)
  should: %s[0].type          == Whois::Record::Contact::TYPE_ADMIN
  should: %s[0].id            == nil
  should: %s[0].name          == "Information Technology\nEDUCAUSE"
  should: %s[0].organization  == nil
  should: %s[0].address       == "4772 Walnut Street\nSte 206"
  should: %s[0].city          == "Boulder"
  should: %s[0].zip           == "80301"
  should: %s[0].state         == "CO"
  should: %s[0].country       == "UNITED STATES"
  should: %s[0].country_code  == nil
  should: %s[0].phone         == "(303) 449-4430"
  should: %s[0].fax           == nil
  should: %s[0].email         == "netadmin@educause.edu"

#technical_contacts
  should: %s CLASS(array)
  should: %s SIZE(1)
  should: %s[0] CLASS(contact)
  should: %s[0].type          == Whois::Record::Contact::TYPE_TECHNICAL
  should: %s[0].id            == nil
  should: %s[0].name          == "Information Technology\nEDUCAUSE"
  should: %s[0].organization  == nil
  should: %s[0].address       == "4772 Walnut Street\nSte 206"
  should: %s[0].city          == "Boulder"
  should: %s[0].zip           == "80301"
  should: %s[0].state         == "CO"
  should: %s[0].country       == "UNITED STATES"
  should: %s[0].country_code  == nil
  should: %s[0].phone         == "(303) 449-4430"
  should: %s[0].fax           == nil
  should: %s[0].email         == "netadmin@educause.edu"


#nameservers
  should: %s CLASS(array)
  should: %s SIZE(3)
  should: %s[0] CLASS(nameserver)
  should: %s[0] == _nameserver.new(:name => "ns3.educause.edu", :ipv4 => "198.59.61.50")
  should: %s[1] CLASS(nameserver)
  should: %s[1] == _nameserver.new(:name => "ns4.educause.edu", :ipv4 => "192.52.179.69")
  should: %s[2] CLASS(nameserver)
  should: %s[2] == _nameserver.new(:name => "ns5.educause.edu", :ipv4 => "198.59.61.50")
