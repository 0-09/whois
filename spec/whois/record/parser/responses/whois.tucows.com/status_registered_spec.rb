# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.tucows.com/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.tucows.com.rb'

describe Whois::Record::Parser::WhoisTucowsCom, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.tucows.com/status_registered.txt")
    part = Whois::Record::Part.new(:body => File.read(file))
    described_class.new(part)
  end

  describe "#domain" do
    it do
      subject.domain.should == "tucows.com"
    end
  end
  describe "#domain_id" do
    it do
      lambda { subject.domain_id }.should raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#status" do
    it do
      subject.status.should == ["clientTransferProhibited", "clientUpdateProhibited", "serverDeleteProhibited", "serverTransferProhibited", "serverUpdateProhibited"]
    end
  end
  describe "#available?" do
    it do
      subject.available?.should == false
    end
  end
  describe "#registered?" do
    it do
      subject.registered?.should == true
    end
  end
  describe "#created_on" do
    it do
      subject.created_on.should be_a(Time)
      subject.created_on.should == Time.parse("1995-09-07")
    end
  end
  describe "#updated_on" do
    it do
      subject.updated_on.should be_a(Time)
      subject.updated_on.should == Time.parse("2013-08-07")
    end
  end
  describe "#expires_on" do
    it do
      subject.expires_on.should be_a(Time)
      subject.expires_on.should == Time.parse("2014-09-06")
    end
  end
  describe "#registrar" do
    it do
      subject.registrar.should be_a(Whois::Record::Registrar)
      subject.registrar.id.should           == nil
      subject.registrar.name.should         == "TUCOWS"
      subject.registrar.organization.should == "TUCOWS, INC."
      subject.registrar.url.should          == "http://tucowsdomains.com/"
    end
  end
  describe "#registrant_contacts" do
    it do
      subject.registrant_contacts.should be_a(Array)
      subject.registrant_contacts.should have(1).items
      subject.registrant_contacts[0].should be_a(Whois::Record::Contact)
      subject.registrant_contacts[0].type.should          == Whois::Record::Contact::TYPE_REGISTRANT
      subject.registrant_contacts[0].name.should          == nil
      subject.registrant_contacts[0].organization.should  == "Tucows.com Co"
      subject.registrant_contacts[0].address.should       == "96 Mowat Avenue"
      subject.registrant_contacts[0].city.should          == "Toronto"
      subject.registrant_contacts[0].zip.should           == "M6K3M1"
      subject.registrant_contacts[0].state.should         == "Ontario"
      subject.registrant_contacts[0].country_code.should  == "CA"
      subject.registrant_contacts[0].phone.should         == nil
      subject.registrant_contacts[0].fax.should           == nil
      subject.registrant_contacts[0].email.should         == nil
    end
  end
  describe "#admin_contacts" do
    it do
      subject.admin_contacts.should be_a(Array)
      subject.admin_contacts.should have(1).items
      subject.admin_contacts[0].should be_a(Whois::Record::Contact)
      subject.admin_contacts[0].type.should          == Whois::Record::Contact::TYPE_ADMINISTRATIVE
      subject.admin_contacts[0].name.should          == "DNS Administrator"
      subject.admin_contacts[0].organization.should  == nil
      subject.admin_contacts[0].address.should       == "96 Mowat Avenue"
      subject.admin_contacts[0].city.should          == "Toronto"
      subject.admin_contacts[0].zip.should           == "M6K3M1"
      subject.admin_contacts[0].state.should         == "Ontario"
      subject.admin_contacts[0].country_code.should  == "CA"
      subject.admin_contacts[0].phone.should         == "+1.4165350123x0000"
      subject.admin_contacts[0].fax.should           == nil
      subject.admin_contacts[0].email.should         == "dnsadmin@tucows.com"
    end
  end
  describe "#technical_contacts" do
    it do
      subject.technical_contacts.should be_a(Array)
      subject.technical_contacts.should have(1).items
      subject.technical_contacts[0].should be_a(Whois::Record::Contact)
      subject.technical_contacts[0].type.should          == Whois::Record::Contact::TYPE_TECHNICAL
      subject.technical_contacts[0].name.should          == "DNS Administrator"
      subject.technical_contacts[0].organization.should  == nil
      subject.technical_contacts[0].address.should       == "96 Mowat Avenue"
      subject.technical_contacts[0].city.should          == "Toronto"
      subject.technical_contacts[0].zip.should           == "M6K3M1"
      subject.technical_contacts[0].state.should         == "Ontario"
      subject.technical_contacts[0].country_code.should  == "CA"
      subject.technical_contacts[0].phone.should         == "+1.4165350123x0000"
      subject.technical_contacts[0].fax.should           == nil
      subject.technical_contacts[0].email.should         == "dnsadmin@tucows.com"
    end
  end
  describe "#nameservers" do
    it do
      subject.nameservers.should be_a(Array)
      subject.nameservers.should have(3).items
      subject.nameservers[0].should be_a(Whois::Record::Nameserver)
      subject.nameservers[0].name.should == "ns3.tucows.com"
      subject.nameservers[0].ipv4.should == "64.99.97.32"
      subject.nameservers[1].should be_a(Whois::Record::Nameserver)
      subject.nameservers[1].name.should == "ns1.tucows.com"
      subject.nameservers[1].ipv4.should == "216.40.47.20"
      subject.nameservers[2].should be_a(Whois::Record::Nameserver)
      subject.nameservers[2].name.should == "ns2.tucows.com"
      subject.nameservers[2].ipv4.should == "64.98.148.15"
    end
  end
end
